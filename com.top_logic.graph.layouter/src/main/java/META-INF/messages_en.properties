com.top_logic.graph.layouter.LayoutDirection = Layout direction
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SINK = Horizontal from sink
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SINK.tooltip = Horizontal layout direction from sinks to sources.
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SOURCE = Horizontal from source
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SOURCE.tooltip = Horizontal layout direction from sources to sinks.
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SINK = Vertical from sink
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SINK.tooltip = Vertical layout direction from sinks to sources.
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SOURCE = Vertical from source
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SOURCE.tooltip = Vertical layout direction from sources to sinks.
com.top_logic.graph.layouter.LayoutDirection.tooltip = Direction of the layout.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover$OrthogonalLineDirection = Orthogonal line direction
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover$OrthogonalLineDirection.tooltip = Two dimensional line directions.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.BOTTOM = Bottom
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.BOTTOM.tooltip = Straight line from top to bottom.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.LEFT = Left
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.LEFT.tooltip = Straight line from right to left.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.NOT_ORTHOGONAL = Not orthogonal
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.NOT_ORTHOGONAL.tooltip = Not an orthogonal straight line.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.RIGHT = Right
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.RIGHT.tooltip = Straight line from left to right.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.TOP = Top
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.TOP.tooltip = Straight line from bottom to top.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus = Intersection status
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.FULL = Full
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.FULL.tooltip = An item is strict contained in the other item.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.NONE = None
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.NONE.tooltip = No intersection.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.PARTIAL = Partial
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.PARTIAL.tooltip = An item is partial contained in the other item.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.tooltip = Intersection status for two items.
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D$Orientation = Orientation
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D$Orientation.tooltip = Orientation of this line.
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.LEFT = Left
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.LEFT.tooltip = From right to left. Start is greater than the end.
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.RIGHT = Right
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.RIGHT.tooltip = From left to right. End is greater than the start.
com.top_logic.graph.layouter.model.LayoutGraph$NodeType = Node type
com.top_logic.graph.layouter.model.LayoutGraph$NodeType.tooltip = Type for a <i>layout node</i> for a layered layout graph structure. Additional type of nodes, dummy nodes, are need for the following use cases: Edges that span over exactly three layers are separated into two edges. For such an edge (v,w) we need an additional dummy node (namely r). (v,w) is now separated into (v,r) and (r,w). Edges that span over more than three layers are described using segments. For such an edge (v,w) we need two additional dummy nodes (namely p and q). (v,w) is now separated into (v,p), (p,q) and (q,w). The edge (p,q) is called the "inner" segment.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.GRAPH_NODE = Graph node
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.GRAPH_NODE.tooltip = Standard <i>layout node</i>.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.P_DUMMY_NODE = P dummy node
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.P_DUMMY_NODE.tooltip = Dummy <i>layout node</i> which is source of a segment.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.Q_DUMMY_NODE = Q dummy node
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.Q_DUMMY_NODE.tooltip = Dummy <i>layout node</i> which is target of a segment.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.R_DUMMY_NODE = R dummy node
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.R_DUMMY_NODE.tooltip = Dummy <i>layout node</i> for edges that span over exactly three layers where no segment is needed.
