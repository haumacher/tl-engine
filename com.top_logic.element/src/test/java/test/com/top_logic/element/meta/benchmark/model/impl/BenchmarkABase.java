/*
 * SPDX-FileCopyrightText: 2022 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package test.com.top_logic.element.meta.benchmark.model.impl;

/**
 * Basic interface for {@link #BENCHMARK_A_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceGenerator}
 */
public interface BenchmarkABase extends com.top_logic.model.TLObject {

	/**
	 * Name of type <code>BenchmarkA</code>
	 */
	String BENCHMARK_A_TYPE = "BenchmarkA";

	/**
	 * Part <code>backRef</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>Benchmark:BenchmarkA</code> in configuration.
	 * </p>
	 */
	String BACK_REF_ATTR = "backRef";

	/**
	 * Part <code>ref</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>Benchmark:BenchmarkA</code> in configuration.
	 * </p>
	 */
	String REF_ATTR = "ref";

	/**
	 * Part <code>refList</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>Benchmark:BenchmarkA</code> in configuration.
	 * </p>
	 */
	String REF_LIST_ATTR = "refList";

	/**
	 * Part <code>refSet</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>Benchmark:BenchmarkA</code> in configuration.
	 * </p>
	 */
	String REF_SET_ATTR = "refSet";

	/**
	 * Part <code>s1</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String S1_ATTR = "s1";

	/**
	 * Part <code>s2</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String S2_ATTR = "s2";

	/**
	 * Part <code>x</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Long</code> in configuration.
	 * </p>
	 */
	String X_ATTR = "x";

	/**
	 * Part <code>y</code> of <code>BenchmarkA</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Long</code> in configuration.
	 * </p>
	 */
	String Y_ATTR = "y";

	/**
	 * Getter for part {@link #BACK_REF_ATTR}.
	 */
	default test.com.top_logic.element.meta.benchmark.model.BenchmarkA getBackRef() {
		return (test.com.top_logic.element.meta.benchmark.model.BenchmarkA) tValueByName(BACK_REF_ATTR);
	}

	/**
	 * Getter for part {@link #REF_ATTR}.
	 */
	default test.com.top_logic.element.meta.benchmark.model.BenchmarkA getRef() {
		return (test.com.top_logic.element.meta.benchmark.model.BenchmarkA) tValueByName(REF_ATTR);
	}

	/**
	 * Setter for part {@link #REF_ATTR}.
	 */
	default void setRef(test.com.top_logic.element.meta.benchmark.model.BenchmarkA newValue) {
		tUpdateByName(REF_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #REF_LIST_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.List<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getRefList() {
		return (java.util.List<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) tValueByName(REF_LIST_ATTR);
	}

	/**
	 * Live view of the {@link #REF_LIST_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getRefListModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(REF_LIST_ATTR);
		@SuppressWarnings("unchecked")
		java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> result = (java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #REF_LIST_ATTR}.
	 */
	default void setRefList(java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> newValue) {
		tUpdateByName(REF_LIST_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #REF_LIST_ATTR} reference.
	 */
	default void addRefList(test.com.top_logic.element.meta.benchmark.model.BenchmarkA newValue) {
		tAddByName(REF_LIST_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #REF_LIST_ATTR} reference.
	 */
	default void removeRefList(test.com.top_logic.element.meta.benchmark.model.BenchmarkA oldValue) {
		tRemoveByName(REF_LIST_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #REF_SET_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.Set<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getRefSet() {
		return (java.util.Set<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) tValueByName(REF_SET_ATTR);
	}

	/**
	 * Live view of the {@link #REF_SET_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getRefSetModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(REF_SET_ATTR);
		@SuppressWarnings("unchecked")
		java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> result = (java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #REF_SET_ATTR}.
	 */
	default void setRefSet(java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> newValue) {
		tUpdateByName(REF_SET_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #REF_SET_ATTR} reference.
	 */
	default void addRefSet(test.com.top_logic.element.meta.benchmark.model.BenchmarkA newValue) {
		tAddByName(REF_SET_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #REF_SET_ATTR} reference.
	 */
	default void removeRefSet(test.com.top_logic.element.meta.benchmark.model.BenchmarkA oldValue) {
		tRemoveByName(REF_SET_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #S1_ATTR}.
	 */
	default String getS1() {
		return (String) tValueByName(S1_ATTR);
	}

	/**
	 * Setter for part {@link #S1_ATTR}.
	 */
	default void setS1(String newValue) {
		tUpdateByName(S1_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #S2_ATTR}.
	 */
	default String getS2() {
		return (String) tValueByName(S2_ATTR);
	}

	/**
	 * Setter for part {@link #S2_ATTR}.
	 */
	default void setS2(String newValue) {
		tUpdateByName(S2_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #X_ATTR}.
	 */
	default Long getX() {
		return (Long) tValueByName(X_ATTR);
	}

	/**
	 * Setter for part {@link #X_ATTR}.
	 */
	default void setX(Long newValue) {
		tUpdateByName(X_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #Y_ATTR}.
	 */
	default Long getY() {
		return (Long) tValueByName(Y_ATTR);
	}

	/**
	 * Setter for part {@link #Y_ATTR}.
	 */
	default void setY(Long newValue) {
		tUpdateByName(Y_ATTR, newValue);
	}

}
