/*
 * SPDX-FileCopyrightText: 2023 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.demo.model.containmentContext.wrap;

/**
 * Basic interface for {@link #THING_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceGenerator}
 */
public interface ThingBase extends com.top_logic.model.TLNamed {

	/**
	 * Name of type <code>Thing</code>
	 */
	String THING_TYPE = "Thing";

	/**
	 * Part <code>name</code> of <code>Thing</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String NAME_ATTR = "name";

	/**
	 * Part <code>uses</code> of <code>Thing</code>
	 * 
	 * <p>
	 * Declared as <code>test.containmentContext:Usage</code> in configuration.
	 * </p>
	 */
	String USES_ATTR = "uses";

	/**
	 * Part <code>world</code> of <code>Thing</code>
	 * 
	 * <p>
	 * Declared as <code>test.containmentContext:World</code> in configuration.
	 * </p>
	 */
	String WORLD_ATTR = "world";

	/**
	 * Getter for part {@link #USES_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.Set<? extends com.top_logic.demo.model.containmentContext.Usage> getUses() {
		return (java.util.Set<? extends com.top_logic.demo.model.containmentContext.Usage>) tValueByName(USES_ATTR);
	}

	/**
	 * Live view of the {@link #USES_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.Set<com.top_logic.demo.model.containmentContext.Usage> getUsesModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(USES_ATTR);
		@SuppressWarnings("unchecked")
		java.util.Set<com.top_logic.demo.model.containmentContext.Usage> result = (java.util.Set<com.top_logic.demo.model.containmentContext.Usage>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #USES_ATTR}.
	 */
	default void setUses(java.util.Set<com.top_logic.demo.model.containmentContext.Usage> newValue) {
		tUpdateByName(USES_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #USES_ATTR} reference.
	 */
	default void addUse(com.top_logic.demo.model.containmentContext.Usage newValue) {
		tAddByName(USES_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #USES_ATTR} reference.
	 */
	default void removeUse(com.top_logic.demo.model.containmentContext.Usage oldValue) {
		tRemoveByName(USES_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #WORLD_ATTR}.
	 */
	default com.top_logic.demo.model.containmentContext.World getWorld() {
		return (com.top_logic.demo.model.containmentContext.World) tValueByName(WORLD_ATTR);
	}

}
