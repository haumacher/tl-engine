com.top_logic.kafka.sync.knowledge.service.AbstractModelBasedKafkaConfiguration = Model based kafka configuration
com.top_logic.kafka.sync.knowledge.service.AbstractModelBasedKafkaConfiguration.tooltip = Superclass for <i>kafka import configuration</i> and <i>kafka export configuration</i> based on the <i>model</i> of the <i>knowledge base</i>
com.top_logic.kafka.sync.knowledge.service.KafkaExportImportConfiguration = Kafka export import configuration
com.top_logic.kafka.sync.knowledge.service.KafkaExportImportConfiguration.Config.export = Export
com.top_logic.kafka.sync.knowledge.service.KafkaExportImportConfiguration.Config.export.tooltip = Export configuration.
com.top_logic.kafka.sync.knowledge.service.KafkaExportImportConfiguration.Config.import = Import
com.top_logic.kafka.sync.knowledge.service.KafkaExportImportConfiguration.Config.import.tooltip = Import configuration.
com.top_logic.kafka.sync.knowledge.service.KafkaExportImportConfiguration.tooltip = Configuration of the <i>kafka export configuration</i> and <i>kafka import configuration</i>.
com.top_logic.kafka.sync.knowledge.service.TLExported = Exported
com.top_logic.kafka.sync.knowledge.service.TLExported.tooltip = Annotation to say that the annotated <i>model part</i> is exported to other systems.
com.top_logic.kafka.sync.knowledge.service.TLImported = Imported
com.top_logic.kafka.sync.knowledge.service.TLImported.source = Source
com.top_logic.kafka.sync.knowledge.service.TLImported.source.tooltip = Value of this annotation.
com.top_logic.kafka.sync.knowledge.service.TLImported.tooltip = Annotation saying the annotated <i>model part</i> is an imported part.
com.top_logic.kafka.sync.knowledge.service.TLSynced.value-mapping = Value mapping
com.top_logic.kafka.sync.knowledge.service.TLSynced.value-mapping.tooltip = A <i>function</i> that converts the value of this attribute into another value that should be transmitted via TL-Sync instead. <p> <em>Export: Primitive values must not be mapped to reference values.</em> But it is okay to map reference values to primitive values. </p> <p> <em>Import: Reference values must not be mapped to primitive values.</em> But it is okay to map primitive values to reference values. </p> <p> Null is allowed both as input and as output of this function. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.DefaultKafkaKBExportRewriter = Default kafka knowledge-base export rewriter
com.top_logic.kafka.sync.knowledge.service.exporter.DefaultKafkaKBExportRewriter.Config.export-config = Export configuration
com.top_logic.kafka.sync.knowledge.service.exporter.DefaultKafkaKBExportRewriter.Config.export-config.tooltip = Export configuration.
com.top_logic.kafka.sync.knowledge.service.exporter.DefaultKafkaKBExportRewriter.tooltip = Default implementation for an Kafka KB exporter, based on the <i>model</i>.
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask = Knowledge-base data producer task
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.cached-event-size = Cached event size
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.cached-event-size.tooltip = Number of cached events. <p> The given number of events sent by this <i>knowledge-base data producer task</i> are cached transiently for further processing by the application. </p> <p> A value <code>&lt;= 0</code> means no events are cached. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.error-pause-factor = Error pause factor
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.error-pause-factor.tooltip = When sending messages keeps failing, the time between the retries increases by this factor every time. <p> When it fails for the first time, the first retry happens after <i>Error pause start</i> milliseconds. The second retry happens after <i>Error pause start</i> ms multiplied by this factor. The third retry happens after <code>start * factor * factor</code> ms and so on. But the time between retries never increases above <i>Error pause maximum</i>. It is capped there. When it has reached this value, it stays there, until the problem is resolved and sending works again. The formula for the n'th retry is therefore: <code>min(error-pause-max, error-pause-start * (error-pause-factor ** (n-1)))</code> When it works again, but later starts failing again, the time between retries starts at <i>Error pause start</i> again. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.error-pause-max = Error pause maximum
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.error-pause-max.tooltip = The maximum pause in milliseconds when sending messages keeps failing. <p> See <i>Error pause factor</i> for the formula for the error pauses in case of repeated failures. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.error-pause-start = Error pause start
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.error-pause-start.tooltip = The pause in milliseconds after an error happened. <p> This is necessary to prevent this task from flooding the logs when a revision cannot be sent. </p> <p> See <i>Error pause factor</i> for the formula for the error pauses in case of repeated failures. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.kafka-producer = Kafka producer
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.kafka-producer.tooltip = Name of the <i>kafka producer</i> in the <i>kafka producer service</i> to send events to. <p> It is expected that the <i>kafka producer</i> can send <i>sync record</i> containing <i>change set</i>. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.lock-timeout = Lock timeout
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.lock-timeout.tooltip = Time in ms which this task has to process the events in the <i>knowledge base</i>. <p> This timeout is just to detect whether a task is potentially broken. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.rewriters = Rewriters
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.Config.rewriters.tooltip = List of <i>event rewriter</i> that rewrites the received <i>change sets</i>.
com.top_logic.kafka.sync.knowledge.service.exporter.KBDataProducerTask.tooltip = <i>State handling task</i> sending changes in the <i>knowledge base</i> to the Kafka Bus.
com.top_logic.kafka.sync.knowledge.service.exporter.ModelBasedExportConfiguration = Model based export configuration
com.top_logic.kafka.sync.knowledge.service.exporter.ModelBasedExportConfiguration.tooltip = Default <i>kafka export configuration</i> based on the application model
com.top_logic.kafka.sync.knowledge.service.exporter.TypeFilterRewriter$Config = Configuration
com.top_logic.kafka.sync.knowledge.service.exporter.TypeFilterRewriter$Config.tooltip = <i>Configuration item</i> for the <i>type filter rewriter</i>.
com.top_logic.kafka.sync.knowledge.service.exporter.TypeFilterRewriter.Config.log-interval = Log interval
com.top_logic.kafka.sync.knowledge.service.exporter.TypeFilterRewriter.Config.log-interval.tooltip = The interval in which the progress should be logged. <p> If processing takes less time than this, nothing is logged. </p> <p> The log level is INFO, just like long running GUI updates. </p>
com.top_logic.kafka.sync.knowledge.service.exporter.TypeFilterRewriter.Config.log-size-threshold = Log size threshold
com.top_logic.kafka.sync.knowledge.service.exporter.TypeFilterRewriter.Config.log-size-threshold.tooltip = <i>Change sets</i> with more than that amount of <i>knowledge events</i> are being logged. <p> The log message contains the revision number and the amount of events per type. </p> <p> The log level is INFO. </p>
com.top_logic.kafka.sync.knowledge.service.importer.DefaultKafkaKBImportRewriter = Default kafka knowledge-base import rewriter
com.top_logic.kafka.sync.knowledge.service.importer.DefaultKafkaKBImportRewriter.Config.import-config = Import configuration
com.top_logic.kafka.sync.knowledge.service.importer.DefaultKafkaKBImportRewriter.Config.import-config.tooltip = Configuration of the import types.
com.top_logic.kafka.sync.knowledge.service.importer.DefaultKafkaKBImportRewriter.tooltip = Default implementation for an Kafka KB importer, based on the <i>model</i>.
com.top_logic.kafka.sync.knowledge.service.importer.KBDataProcessor = Knowledge-base data processor
com.top_logic.kafka.sync.knowledge.service.importer.KBDataProcessor.Config.rewriters = Rewriters
com.top_logic.kafka.sync.knowledge.service.importer.KBDataProcessor.Config.rewriters.tooltip = List of <i>event rewriter</i> that rewrites the received <i>change sets</i>.
com.top_logic.kafka.sync.knowledge.service.importer.KBDataProcessor.tooltip = <i>Consumer processor</i> that accepts <i>change set</i> and writes them to the <i>knowledge base</i>.
com.top_logic.kafka.sync.knowledge.service.importer.ModelBasedImportConfiguration = Model based import configuration
com.top_logic.kafka.sync.knowledge.service.importer.ModelBasedImportConfiguration.tooltip = Default <i>kafka import configuration</i> based on the application model.
com.top_logic.kafka.sync.knowledge.service.importer.TTypeRewriter = T type rewriter
com.top_logic.kafka.sync.knowledge.service.importer.TTypeRewriter.Config.import-configuration = Import configuration
com.top_logic.kafka.sync.knowledge.service.importer.TTypeRewriter.Config.import-configuration.tooltip = <i>Kafka import configuration</i> for this <i>T type rewriter</i>.
com.top_logic.kafka.sync.knowledge.service.importer.TTypeRewriter.tooltip = Rewrites the type of an <i>object</i>, and the attribute reference of a link, due to a configured mapping.
com.top_logic.kafka.sync.monitor.TLSyncReceiverApplicationMonitor = Sync receiver application monitor
com.top_logic.kafka.sync.monitor.TLSyncReceiverApplicationMonitor.Config.max-processing-time = Maximum processing time
com.top_logic.kafka.sync.monitor.TLSyncReceiverApplicationMonitor.Config.max-processing-time.tooltip = How long a receive operation can run, before it is considered to be "too long".
com.top_logic.kafka.sync.monitor.TLSyncReceiverApplicationMonitor.Config.receiver-name = Receiver name
com.top_logic.kafka.sync.monitor.TLSyncReceiverApplicationMonitor.Config.receiver-name.tooltip = The name of the <i>consumer dispatcher</i> which is used by TL-Sync for receiving.
com.top_logic.kafka.sync.monitor.TLSyncReceiverApplicationMonitor.tooltip = The <i>application health monitor</i> for TL-Sync receiving. <p> It reports <i>error</i>, whenever receiving is not possible, irrespective of the reason. Therefore, it will for example report <i>error</i> during the application startup, until the relevant services have been started. Only the user can decide, whether it is currently okay that this service is not operational. If this class reported "okay" in such cases, it would mislead the problem analysis if it was not correct that this service is for example not started or shut down. </p>
com.top_logic.kafka.sync.monitor.TLSyncSenderApplicationMonitor = Sync sender application monitor
com.top_logic.kafka.sync.monitor.TLSyncSenderApplicationMonitor.Config.max-processing-time = Maximum processing time
com.top_logic.kafka.sync.monitor.TLSyncSenderApplicationMonitor.Config.max-processing-time.tooltip = How long a send operation can run, before it is considered to be "too long".
com.top_logic.kafka.sync.monitor.TLSyncSenderApplicationMonitor.Config.sender-name = Sender name
com.top_logic.kafka.sync.monitor.TLSyncSenderApplicationMonitor.Config.sender-name.tooltip = The name of the <i>task</i> which is used by TL-Sync for sending.
com.top_logic.kafka.sync.monitor.TLSyncSenderApplicationMonitor.tooltip = The <i>application health monitor</i> for TL-Sync for sending. <p> It reports <i>error</i>, whenever sending is not possible, irrespective of the reason. Therefore, it will for example report <i>error</i> during the application startup, until the relevant services have been started. Only the user can decide, whether it is currently okay that this service is not operational. If this class reported "okay" in such cases, it would mislead the problem analysis if it was not correct that this service is for example not started or shut down. </p>
com.top_logic.kafka.sync.serialization.ChangeSetDeserializer = Change set deserializer
com.top_logic.kafka.sync.serialization.ChangeSetDeserializer.Config.type-mapping = Type mapping
com.top_logic.kafka.sync.serialization.ChangeSetDeserializer.Config.type-mapping.tooltip = Mapping that resolves the serialised type names.
com.top_logic.kafka.sync.serialization.ChangeSetDeserializer.tooltip = <i>Deserializer</i> for a <i>change set</i> formerly serialized by <i>change set serializer</i>.
com.top_logic.kafka.sync.serialization.ChangeSetSerializer = Change set serializer
com.top_logic.kafka.sync.serialization.ChangeSetSerializer.Config.message-version = Message version
com.top_logic.kafka.sync.serialization.ChangeSetSerializer.Config.message-version.tooltip = Which message version should be written. <p> Supported values: <ol> <li>2.0.0: The current version. This is the default value.</li> <li>1.0.0: The old version, which did not include the revision of the last message. With this version, it is not possible to detect missing messages.</li> </ol> </p>
com.top_logic.kafka.sync.serialization.ChangeSetSerializer.tooltip = <i>Serializer</i> of a <i>change set</i>.
