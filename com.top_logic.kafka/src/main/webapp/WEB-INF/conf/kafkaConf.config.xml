<?xml version="1.0" encoding="utf-8"?>

<application xmlns:config="http://www.top-logic.com/ns/config/6.0">
	<services>
		<config service-class="com.top_logic.basic.module.ModuleSystem">
			<instance class="com.top_logic.basic.module.ModuleSystem">
				<modules>
					<module key="com.top_logic.kafka.services.consumer.KafkaConsumerService$Module" value="true"/>
					<module key="com.top_logic.kafka.services.producer.KafkaProducerService$Module" value="true"/>
					<module key="com.top_logic.kafka.services.connect.KafkaConnectService$Module" value="true"/>
		            <module key="com.top_logic.kafka.services.sensors.SensorService$Module" value="true" />
				</modules>
			</instance>
		</config>
	
		<config service-class="com.top_logic.basic.util.ResourcesModule">
			<instance>
				<bundles>
					<bundle name="kafkaMessages" />
				</bundles>
			</instance>
		</config>

        <config service-class="com.top_logic.layout.provider.LabelProviderService">
            <instance>
                <label-providers>
		            <provider kind="CODE" type="com.top_logic.kafka.services.sensors.Sensor$SensorActivityState" implementation="com.top_logic.kafka.layout.sensors.SensorActivityStateResourceProvider"/>
                </label-providers>
            </instance>
        </config>

 		<config service-class="com.top_logic.gui.ThemeFactory">
			<instance class="com.top_logic.gui.MultiThemeFactory" />
		</config>
 
        <config service-class="com.top_logic.kafka.services.sensors.SensorService">
            <instance class="com.top_logic.kafka.services.sensors.SensorService" />
        </config>
        
        <config service-class="com.top_logic.kafka.services.producer.KafkaProducerService">
            <instance class="com.top_logic.kafka.services.producer.KafkaProducerService">
            	<producers>
            		<producer class="com.top_logic.kafka.services.producer.TLKafkaProducer"
            			name="KBChange-Producer"
                        topic="%DATA_CHANGE_TOPIC_PRODUCER%"
						bootstrap.servers="%KAFKA_PRODUCER_SERVER%"
						value.serializer.typed.config="com.top_logic.kafka.serialization.ChangeSetSerializer"
						log-writer="com.top_logic.kafka.log.TLSyncRecordLogWriter"
					/>
            	</producers>
            </instance>
        </config>
        
        <config service-class="com.top_logic.kafka.services.consumer.KafkaConsumerService">
            <instance class="com.top_logic.kafka.services.consumer.KafkaConsumerService">
				<dependencies>
					<!-- Needed by com.top_logic.kafka.knowledge.service.importer.DefaultKafkaKBImportRewriter -->
					<dependency key="com.top_logic.kafka.knowledge.service.KafkaExportImportConfiguration" value="true" />
					<!-- Needed by com.top_logic.kafka.knowledge.service.importer.DefaultKafkaKBImportRewriter -->
					<dependency key="com.top_logic.util.model.ModelService" value="true" />
				</dependencies>
                <consumers>
                    <consumer name="KB-Data-Change-Consumer"
                        topics="%DATA_CHANGE_TOPIC_CONSUMER%"
                        bootstrap.servers="%KAFKA_CONSUMER_SERVER%"
                        group.id="%DATA_CHANGE_CONSUMER_GROUP_NAME%"
                        enable.auto.commit="false"
						auto.offset.reset="earliest"
						log-writer="com.top_logic.kafka.log.TLSyncRecordLogWriter"
                    >
                    	<value.deserializer.typed.config class="com.top_logic.kafka.serialization.ChangeSetDeserializer" />
                        <processors>
                            <processor class="com.top_logic.kafka.knowledge.service.importer.KBDataProcessor">
                            	<rewriters>
                            		<rewriter class="com.top_logic.kafka.knowledge.service.importer.DefaultKafkaKBImportRewriter" />
                            	</rewriters>
                            </processor>
                        </processors>
                    </consumer>
                </consumers>
            </instance>
        </config>
        
        <config service-class="com.top_logic.kafka.knowledge.service.KafkaExportImportConfiguration">
			<instance class="com.top_logic.kafka.knowledge.service.KafkaExportImportConfiguration">
				<export class="com.top_logic.kafka.knowledge.service.exporter.ModelBasedExportConfiguration" />
			</instance>
		</config>
		
        <config service-class="com.top_logic.basic.format.configured.FormatterService">
			<instance class="com.top_logic.basic.format.configured.FormatterService">
				<formats>
					<format id="kafka-message-timestamp">
						<custom-date pattern="dd.MM.yyyy HH:mm:ss.SSS" />
					</format>
				</formats>
			</instance>
		</config>

		<config service-class="com.top_logic.util.sched.Scheduler">
			<instance class="com.top_logic.util.sched.Scheduler">
				<dependencies>
					<!-- Needed by com.top_logic.kafka.knowledge.service.exporter.KBDataProducerTask -->
					<dependency key="com.top_logic.kafka.services.producer.KafkaProducerService" value="true" />
					<!-- Needed by com.top_logic.kafka.knowledge.service.exporter.KBDataProducerTask -->
					<dependency key="com.top_logic.knowledge.service.KnowledgeBaseFactory" value="true" />
					<!-- Needed by com.top_logic.kafka.knowledge.service.exporter.DefaultKafkaKBExportRewriter -->
					<dependency key="com.top_logic.kafka.knowledge.service.KafkaExportImportConfiguration" value="true" />
					<!-- Needed by com.top_logic.kafka.knowledge.service.exporter.DefaultKafkaKBExportRewriter -->
					<dependency key="com.top_logic.knowledge.service.ExtIDFactory" value="true" />
				</dependencies>
				<tasks>
					<task class="com.top_logic.kafka.knowledge.service.exporter.KBDataProducerTask" 
						name="KafkaProducerTask"
						kafka-producer="KBChange-Producer"
					>
						<rewriters>
							<rewriter class="com.top_logic.kafka.knowledge.service.exporter.DefaultKafkaKBExportRewriter" />
						</rewriters>
						<schedules>
							<periodically
								interval="%KAFKA_POLLING_INTERVAL%" />
						</schedules>
					</task>
				</tasks>
			</instance>
		</config>

        <config service-class="com.top_logic.util.monitor.ApplicationMonitor">
			<instance>
				<components>
					<component name="Kafka sender" class="com.top_logic.kafka.monitor.KafkaSenderApplicationMonitor" />
					<component name="Kafka receiver" class="com.top_logic.kafka.monitor.KafkaReceiverApplicationMonitor" />
					<component name="TL-Sync sender" class="com.top_logic.kafka.monitor.TLSyncSenderApplicationMonitor"
						sender-name="KafkaProducerTask" />
					<component name="TL-Sync receiver" class="com.top_logic.kafka.monitor.TLSyncReceiverApplicationMonitor"
						receiver-name="KB-Data-Change-Consumer" />
				</components>
			</instance>
		</config>

	</services>
	
</application>
