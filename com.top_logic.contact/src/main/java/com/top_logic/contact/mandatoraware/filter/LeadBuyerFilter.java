/*
 * SPDX-FileCopyrightText: 2006 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.contact.mandatoraware.filter;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.top_logic.contact.mandatoraware.COSPersonContact;
import com.top_logic.element.meta.AttributeUpdate;
import com.top_logic.element.meta.AttributeUpdateContainer;
import com.top_logic.element.meta.query.MetaAttributeFilter;
import com.top_logic.element.meta.query.kbbased.KBBasedWrapperValuedAttributeFilter;
import com.top_logic.model.TLStructuredType;
import com.top_logic.model.TLStructuredTypePart;

/**
 * LeadBuyer filter.
 * Takes PersonContacts as inputs but uses the companies of which the
 * contacts are lead buyers as search wrappers.
 *
 * @author    <a href=mailto:kbu@top-logic.com>kbu</a>
 */
public class LeadBuyerFilter extends KBBasedWrapperValuedAttributeFilter {

    /**
     * CTor with config map
     *
     * @param aValueMap the config map
     * @throws IllegalArgumentException if some config
     * values do not match constraints
     */
	public LeadBuyerFilter(Map aValueMap) throws IllegalArgumentException {
		super(aValueMap);
	}

	/**
	 * CTor with attribute, search value list and negation flag.
	 *
	 * @param anAttribute
	 *        the attribute
	 * @param aWrapperList
	 *        the List of Wrappers (search values)
	 * @param doNegate
	 *        if true negate result
	 * @param isRelevant
	 *        the relevant flag
	 * @throws IllegalArgumentException
	 *         if some attributes do not match constraints
	 */
	public LeadBuyerFilter(TLStructuredTypePart anAttribute, List aWrapperList,
			boolean doNegate, boolean isRelevant) throws IllegalArgumentException {
		super(anAttribute, aWrapperList, doNegate, isRelevant, null);
	}

	/**
	 * Use the companies of which the current wrappers are lead buyers.
	 *
	 * @see com.top_logic.element.meta.query.WrapperValuedAttributeFilter#getSearchWrappers()
	 */
	@Override
	public List getSearchWrappers() {
		Set theResSet = new HashSet();
		Iterator theContacts = this.getWrappers().iterator();
		while (theContacts.hasNext()) {
			COSPersonContact theContact = (COSPersonContact) theContacts.next();
			theResSet.addAll(theContact.getCompaniesOfLeadBuyer());
		}

		List theRes = new ArrayList(theResSet);
		return theRes;
	}

	/**
	 * No update. Must be generated by external method because we do not work on the attribute
	 * directly.
	 *
	 * @see MetaAttributeFilter#getSearchValuesAsUpdate(AttributeUpdateContainer, TLStructuredType, String)
	 */
	@Override
	public AttributeUpdate getSearchValuesAsUpdate(AttributeUpdateContainer updateContainer, TLStructuredType type,
			String domain) {
		return null;
	}

	@Override
	public TLStructuredTypePart getFilteredAttribute() {
		return null;
	}

}
