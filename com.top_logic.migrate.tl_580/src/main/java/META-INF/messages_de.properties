com.top_logic.migrate.tl_580.ConcreteTypeComputation = Betontyp-Berechnung
com.top_logic.migrate.tl_580.ConcreteTypeComputation.Config.type-attribute = Typ-Attribut
com.top_logic.migrate.tl_580.ConcreteTypeComputation.Config.type-attribute.tooltip = Name des Attributs, das den Typ eines <i>Objekts</i> enthält.
com.top_logic.migrate.tl_580.ConcreteTypeComputation.tooltip = Rewriter zur Auflösung des konkreten Objekttyps für ein <i>strukturiertes Element</i> aus den 5.7-Attributwerten.
com.top_logic.migrate.tl_580.MetaElementGlobalizer = Meta-Element-Globalisierer
com.top_logic.migrate.tl_580.MetaElementGlobalizer.Config.meta-elements = Meta-Elemente
com.top_logic.migrate.tl_580.MetaElementGlobalizer.Config.meta-elements.tooltip = Der Name des Meta-Elements, das global sein muss.
com.top_logic.migrate.tl_580.MetaElementGlobalizer.tooltip = Rewriter, der die <code>"scope"</code> der globalen <i>Klasse</i> auf das Modul setzt. Dies ist erforderlich, um <i>Klassen</i> zu ändern, die im Wurzelelement in 5.7 definiert sind.
com.top_logic.migrate.tl_580.SetStaticAsDynamicType = Statisch als dynamischen Typ festlegen
com.top_logic.migrate.tl_580.SetStaticAsDynamicType.tooltip = <i>Ereignis-Rewriter-Proxy</i>, der den statischen Typ eines dynamischen Objekts auch als dynamischen Typ festlegt.
com.top_logic.migrate.tl_580.SetTLModule = Modul einstellen
com.top_logic.migrate.tl_580.SetTLModule.Config.no-module-assignment = Keine Modulzuordnung
com.top_logic.migrate.tl_580.SetTLModule.Config.no-module-assignment.tooltip = Die Klassen, für die keine Modulzuordnung erfolgen muss. <p> Dies ermöglicht die Konfiguration von Typnamen, die in mehr als einem Modul vorhanden sind. Für solche Typen würde die Migration fehlschlagen. </p>
com.top_logic.migrate.tl_580.SetTLModule.tooltip = Rewriter, der installiert, erzeugt Ereignis zum Erstellen von <i>Modulen</i>.
