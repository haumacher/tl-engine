/*
 * SPDX-FileCopyrightText: 2022 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package test.com.top_logic.element.meta.benchmark.model.impl;

/**
 * Basic interface for {@link #BENCHMARK_B_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceGenerator}
 */
public interface BenchmarkBBase extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA {

	/**
	 * Name of type <code>BenchmarkB</code>
	 */
	String BENCHMARK_B_TYPE = "BenchmarkB";

	/**
	 * Part <code>dynamicRef</code> of <code>BenchmarkB</code>
	 * 
	 * <p>
	 * Declared as <code>Benchmark:BenchmarkA</code> in configuration.
	 * </p>
	 */
	String DYNAMIC_REF_ATTR = "dynamicRef";

	/**
	 * Part <code>dynamicRefList</code> of <code>BenchmarkB</code>
	 * 
	 * <p>
	 * Declared as <code>Benchmark:BenchmarkA</code> in configuration.
	 * </p>
	 */
	String DYNAMIC_REF_LIST_ATTR = "dynamicRefList";

	/**
	 * Part <code>dynamicRefSet</code> of <code>BenchmarkB</code>
	 * 
	 * <p>
	 * Declared as <code>Benchmark:BenchmarkA</code> in configuration.
	 * </p>
	 */
	String DYNAMIC_REF_SET_ATTR = "dynamicRefSet";

	/**
	 * Part <code>dynamicS1</code> of <code>BenchmarkB</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String DYNAMIC_S1_ATTR = "dynamicS1";

	/**
	 * Part <code>dynamicS2</code> of <code>BenchmarkB</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String DYNAMIC_S2_ATTR = "dynamicS2";

	/**
	 * Part <code>dynamicX</code> of <code>BenchmarkB</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Long</code> in configuration.
	 * </p>
	 */
	String DYNAMIC_X_ATTR = "dynamicX";

	/**
	 * Part <code>dynamicY</code> of <code>BenchmarkB</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Long</code> in configuration.
	 * </p>
	 */
	String DYNAMIC_Y_ATTR = "dynamicY";

	/**
	 * Getter for part {@link #DYNAMIC_REF_ATTR}.
	 */
	default test.com.top_logic.element.meta.benchmark.model.BenchmarkA getDynamicRef() {
		return (test.com.top_logic.element.meta.benchmark.model.BenchmarkA) tValueByName(DYNAMIC_REF_ATTR);
	}

	/**
	 * Setter for part {@link #DYNAMIC_REF_ATTR}.
	 */
	default void setDynamicRef(test.com.top_logic.element.meta.benchmark.model.BenchmarkA newValue) {
		tUpdateByName(DYNAMIC_REF_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #DYNAMIC_REF_LIST_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.List<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getDynamicRefList() {
		return (java.util.List<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) tValueByName(DYNAMIC_REF_LIST_ATTR);
	}

	/**
	 * Live view of the {@link #DYNAMIC_REF_LIST_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getDynamicRefListModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(DYNAMIC_REF_LIST_ATTR);
		@SuppressWarnings("unchecked")
		java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> result = (java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #DYNAMIC_REF_LIST_ATTR}.
	 */
	default void setDynamicRefList(java.util.List<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> newValue) {
		tUpdateByName(DYNAMIC_REF_LIST_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #DYNAMIC_REF_LIST_ATTR} reference.
	 */
	default void addDynamicRefList(test.com.top_logic.element.meta.benchmark.model.BenchmarkA newValue) {
		tAddByName(DYNAMIC_REF_LIST_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #DYNAMIC_REF_LIST_ATTR} reference.
	 */
	default void removeDynamicRefList(test.com.top_logic.element.meta.benchmark.model.BenchmarkA oldValue) {
		tRemoveByName(DYNAMIC_REF_LIST_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #DYNAMIC_REF_SET_ATTR}.
	 */
	@SuppressWarnings("unchecked")
	default java.util.Set<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getDynamicRefSet() {
		return (java.util.Set<? extends test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) tValueByName(DYNAMIC_REF_SET_ATTR);
	}

	/**
	 * Live view of the {@link #DYNAMIC_REF_SET_ATTR} part.
	 * <p>
	 * Changes to this {@link java.util.Collection} change directly the attribute value.
	 * The caller has to take care of the transaction handling.
	 * </p>
	 */
	default java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> getDynamicRefSetModifiable() {
		com.top_logic.model.TLStructuredTypePart attribute = tType().getPart(DYNAMIC_REF_SET_ATTR);
		@SuppressWarnings("unchecked")
		java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> result = (java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA>) com.top_logic.element.meta.kbbased.WrapperMetaAttributeUtil.getLiveCollection(this, attribute);
		return result;
	}

	/**
	 * Setter for part {@link #DYNAMIC_REF_SET_ATTR}.
	 */
	default void setDynamicRefSet(java.util.Set<test.com.top_logic.element.meta.benchmark.model.BenchmarkA> newValue) {
		tUpdateByName(DYNAMIC_REF_SET_ATTR, newValue);
	}

	/**
	 * Adds a value to the {@link #DYNAMIC_REF_SET_ATTR} reference.
	 */
	default void addDynamicRefSet(test.com.top_logic.element.meta.benchmark.model.BenchmarkA newValue) {
		tAddByName(DYNAMIC_REF_SET_ATTR, newValue);
	}

	/**
	 * Removes the given value from the {@link #DYNAMIC_REF_SET_ATTR} reference.
	 */
	default void removeDynamicRefSet(test.com.top_logic.element.meta.benchmark.model.BenchmarkA oldValue) {
		tRemoveByName(DYNAMIC_REF_SET_ATTR, oldValue);
	}

	/**
	 * Getter for part {@link #DYNAMIC_S1_ATTR}.
	 */
	default String getDynamicS1() {
		return (String) tValueByName(DYNAMIC_S1_ATTR);
	}

	/**
	 * Setter for part {@link #DYNAMIC_S1_ATTR}.
	 */
	default void setDynamicS1(String newValue) {
		tUpdateByName(DYNAMIC_S1_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #DYNAMIC_S2_ATTR}.
	 */
	default String getDynamicS2() {
		return (String) tValueByName(DYNAMIC_S2_ATTR);
	}

	/**
	 * Setter for part {@link #DYNAMIC_S2_ATTR}.
	 */
	default void setDynamicS2(String newValue) {
		tUpdateByName(DYNAMIC_S2_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #DYNAMIC_X_ATTR}.
	 */
	default Long getDynamicX() {
		return (Long) tValueByName(DYNAMIC_X_ATTR);
	}

	/**
	 * Setter for part {@link #DYNAMIC_X_ATTR}.
	 */
	default void setDynamicX(Long newValue) {
		tUpdateByName(DYNAMIC_X_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #DYNAMIC_Y_ATTR}.
	 */
	default Long getDynamicY() {
		return (Long) tValueByName(DYNAMIC_Y_ATTR);
	}

	/**
	 * Setter for part {@link #DYNAMIC_Y_ATTR}.
	 */
	default void setDynamicY(Long newValue) {
		tUpdateByName(DYNAMIC_Y_ATTR, newValue);
	}

}
