/*
 * SPDX-FileCopyrightText: 2023 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.model.core;

/**
 * Factory for <code>tl.core</code> objects.
 * 
 * <p>
 * Note: this is generated code. Do not modify. Instead, create a subclass and register this in the module system.
 * </p>
 * 
 * @author Automatically generated by "com.top_logic.element.model.generate.FactoryGenerator"
 */
public interface TlCoreFactory {

	/**
	 * Name of the structure <code>tl.core</code> defined by {@link TlCoreFactory}.
	 */
	public static final String TL_CORE_STRUCTURE = "tl.core";

	/**
	 * Name of the data type <code>Boolean</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String BOOLEAN_TYPE = "Boolean";

	/**
	 * Name of the data type <code>Tristate</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String TRISTATE_TYPE = "Tristate";

	/**
	 * Name of the data type <code>Byte</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String BYTE_TYPE = "Byte";

	/**
	 * Name of the data type <code>Short</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String SHORT_TYPE = "Short";

	/**
	 * Name of the data type <code>Integer</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String INTEGER_TYPE = "Integer";

	/**
	 * Name of the data type <code>Long</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String LONG_TYPE = "Long";

	/**
	 * Name of the data type <code>Float</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String FLOAT_TYPE = "Float";

	/**
	 * Name of the data type <code>Double</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String DOUBLE_TYPE = "Double";

	/**
	 * Name of the data type <code>Name</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String NAME_TYPE = "Name";

	/**
	 * Name of the data type <code>Key</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String KEY_TYPE = "Key";

	/**
	 * Name of the data type <code>String</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String STRING_TYPE = "String";

	/**
	 * Name of the data type <code>Password</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String PASSWORD_TYPE = "Password";

	/**
	 * Name of the data type <code>Text</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String TEXT_TYPE = "Text";

	/**
	 * Name of the data type <code>Date</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String DATE_TYPE = "Date";

	/**
	 * Name of the data type <code>Day</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String DAY_TYPE = "Day";

	/**
	 * Name of the data type <code>Time</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String TIME_TYPE = "Time";

	/**
	 * Name of the data type <code>DateTime</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String DATE_TIME_TYPE = "DateTime";

	/**
	 * Name of the data type <code>Binary</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String BINARY_TYPE = "Binary";

	/**
	 * Name of the data type <code>Icon</code> in module {@value #TL_CORE_STRUCTURE}.
	 */
	public static final String ICON_TYPE = "Icon";

	/**
	 * Lookup {@link Author} type.
	 */
	public static com.top_logic.model.TLClass getAuthorType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(Author.AUTHOR_TYPE);
	}

	/**
	 * Lookup {@link Author#NAME_ATTR} of {@link Author}.
	 */
	public static com.top_logic.model.TLProperty getNameAuthorAttr() {
		return (com.top_logic.model.TLProperty) getAuthorType().getPart(Author.NAME_ATTR);
	}

	/**
	 * Lookup {@link com.top_logic.knowledge.service.Revision} type.
	 */
	public static com.top_logic.model.TLClass getRevisionType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(com.top_logic.knowledge.service.Revision.REVISION_TYPE);
	}

	/**
	 * Lookup {@link com.top_logic.knowledge.service.Revision#AUTHOR_ATTR} of {@link com.top_logic.knowledge.service.Revision}.
	 */
	public static com.top_logic.model.TLProperty getAuthorRevisionAttr() {
		return (com.top_logic.model.TLProperty) getRevisionType().getPart(com.top_logic.knowledge.service.Revision.AUTHOR_ATTR);
	}

	/**
	 * Lookup {@link com.top_logic.knowledge.service.Revision#DATE_ATTR} of {@link com.top_logic.knowledge.service.Revision}.
	 */
	public static com.top_logic.model.TLProperty getDateRevisionAttr() {
		return (com.top_logic.model.TLProperty) getRevisionType().getPart(com.top_logic.knowledge.service.Revision.DATE_ATTR);
	}

	/**
	 * Lookup {@link com.top_logic.knowledge.service.Revision#LOG_ATTR} of {@link com.top_logic.knowledge.service.Revision}.
	 */
	public static com.top_logic.model.TLProperty getLogRevisionAttr() {
		return (com.top_logic.model.TLProperty) getRevisionType().getPart(com.top_logic.knowledge.service.Revision.LOG_ATTR);
	}

	/**
	 * Lookup {@link com.top_logic.knowledge.service.Revision#REVISION_ATTR} of {@link com.top_logic.knowledge.service.Revision}.
	 */
	public static com.top_logic.model.TLProperty getRevisionRevisionAttr() {
		return (com.top_logic.model.TLProperty) getRevisionType().getPart(com.top_logic.knowledge.service.Revision.REVISION_ATTR);
	}

	/**
	 * Lookup {@value #BOOLEAN_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getBooleanType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(BOOLEAN_TYPE);
	}

	/**
	 * Lookup {@value #TRISTATE_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getTristateType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(TRISTATE_TYPE);
	}

	/**
	 * Lookup {@value #BYTE_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getByteType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(BYTE_TYPE);
	}

	/**
	 * Lookup {@value #SHORT_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getShortType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(SHORT_TYPE);
	}

	/**
	 * Lookup {@value #INTEGER_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getIntegerType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(INTEGER_TYPE);
	}

	/**
	 * Lookup {@value #LONG_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getLongType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(LONG_TYPE);
	}

	/**
	 * Lookup {@value #FLOAT_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getFloatType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(FLOAT_TYPE);
	}

	/**
	 * Lookup {@value #DOUBLE_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getDoubleType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(DOUBLE_TYPE);
	}

	/**
	 * Lookup {@value #NAME_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getNameType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(NAME_TYPE);
	}

	/**
	 * Lookup {@value #KEY_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getKeyType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(KEY_TYPE);
	}

	/**
	 * Lookup {@value #STRING_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getStringType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(STRING_TYPE);
	}

	/**
	 * Lookup {@value #PASSWORD_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getPasswordType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(PASSWORD_TYPE);
	}

	/**
	 * Lookup {@value #TEXT_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getTextType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(TEXT_TYPE);
	}

	/**
	 * Lookup {@value #DATE_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getDateType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(DATE_TYPE);
	}

	/**
	 * Lookup {@value #DAY_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getDayType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(DAY_TYPE);
	}

	/**
	 * Lookup {@value #TIME_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getTimeType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(TIME_TYPE);
	}

	/**
	 * Lookup {@value #DATE_TIME_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getDateTimeType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(DATE_TIME_TYPE);
	}

	/**
	 * Lookup {@value #BINARY_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getBinaryType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(BINARY_TYPE);
	}

	/**
	 * Lookup {@value #ICON_TYPE} data type.
	 */
	public static com.top_logic.model.TLPrimitive getIconType() {
		return (com.top_logic.model.TLPrimitive) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TL_CORE_STRUCTURE).getType(ICON_TYPE);
	}

	/**
	 * Name of type <code>Author</code> in structure {@link #TL_CORE_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Author#AUTHOR_TYPE}.
	 */
	@Deprecated
	public static final String AUTHOR_NODE = Author.AUTHOR_TYPE;

	/**
	 * Name of type <code>Revision</code> in structure {@link #TL_CORE_STRUCTURE}.
	 * 
	 * @deprecated Use {@link com.top_logic.knowledge.service.Revision#REVISION_TYPE}.
	 */
	@Deprecated
	public static final String REVISION_NODE = com.top_logic.knowledge.service.Revision.REVISION_TYPE;

	/**
	 * Storage table name of {@link #REVISION_NODE} objects.
	 */
	public static final String KO_NAME_REVISION = "Revision";

}
