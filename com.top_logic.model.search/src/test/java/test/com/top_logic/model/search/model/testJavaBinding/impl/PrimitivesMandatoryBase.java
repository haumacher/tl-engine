/*
 * SPDX-FileCopyrightText: 2022 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package test.com.top_logic.model.search.model.testJavaBinding.impl;

/**
 * Basic interface for {@link #PRIMITIVES_MANDATORY_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceGenerator}
 */
public interface PrimitivesMandatoryBase extends test.com.top_logic.model.search.model.testJavaBinding.Common {

	/**
	 * Name of type <code>PrimitivesMandatory</code>
	 */
	String PRIMITIVES_MANDATORY_TYPE = "PrimitivesMandatory";

	/**
	 * Part <code>byte</code> of <code>PrimitivesMandatory</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Byte</code> in configuration.
	 * </p>
	 */
	String BYTE_ATTR = "byte";

	/**
	 * Part <code>double</code> of <code>PrimitivesMandatory</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Double</code> in configuration.
	 * </p>
	 */
	String DOUBLE_ATTR = "double";

	/**
	 * Part <code>float</code> of <code>PrimitivesMandatory</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Float</code> in configuration.
	 * </p>
	 */
	String FLOAT_ATTR = "float";

	/**
	 * Part <code>int</code> of <code>PrimitivesMandatory</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Integer</code> in configuration.
	 * </p>
	 */
	String INT_ATTR = "int";

	/**
	 * Part <code>long</code> of <code>PrimitivesMandatory</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Long</code> in configuration.
	 * </p>
	 */
	String LONG_ATTR = "long";

	/**
	 * Part <code>short</code> of <code>PrimitivesMandatory</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Short</code> in configuration.
	 * </p>
	 */
	String SHORT_ATTR = "short";

	/**
	 * Getter for part {@link #BYTE_ATTR}.
	 */
	default int getByte() {
		return (Integer) tValueByName(BYTE_ATTR);
	}

	/**
	 * Setter for part {@link #BYTE_ATTR}.
	 */
	default void setByte(int newValue) {
		tUpdateByName(BYTE_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #DOUBLE_ATTR}.
	 */
	default double getDouble() {
		return (Double) tValueByName(DOUBLE_ATTR);
	}

	/**
	 * Setter for part {@link #DOUBLE_ATTR}.
	 */
	default void setDouble(double newValue) {
		tUpdateByName(DOUBLE_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #FLOAT_ATTR}.
	 */
	default float getFloat() {
		return (Float) tValueByName(FLOAT_ATTR);
	}

	/**
	 * Setter for part {@link #FLOAT_ATTR}.
	 */
	default void setFloat(float newValue) {
		tUpdateByName(FLOAT_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #INT_ATTR}.
	 */
	default int getInt() {
		return (Integer) tValueByName(INT_ATTR);
	}

	/**
	 * Setter for part {@link #INT_ATTR}.
	 */
	default void setInt(int newValue) {
		tUpdateByName(INT_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #LONG_ATTR}.
	 */
	default long getLong() {
		return (Long) tValueByName(LONG_ATTR);
	}

	/**
	 * Setter for part {@link #LONG_ATTR}.
	 */
	default void setLong(long newValue) {
		tUpdateByName(LONG_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #SHORT_ATTR}.
	 */
	default int getShort() {
		return (Integer) tValueByName(SHORT_ATTR);
	}

	/**
	 * Setter for part {@link #SHORT_ATTR}.
	 */
	default void setShort(int newValue) {
		tUpdateByName(SHORT_ATTR, newValue);
	}

}
