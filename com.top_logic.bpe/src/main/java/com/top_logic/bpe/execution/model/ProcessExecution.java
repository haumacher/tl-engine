/*
 * SPDX-FileCopyrightText: 2019 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.bpe.execution.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import com.top_logic.bpe.bpml.model.Task;
import com.top_logic.bpe.execution.model.impl.ProcessExecutionBase;
import com.top_logic.contact.business.PersonContact;
import com.top_logic.knowledge.objects.KnowledgeItem;
import com.top_logic.knowledge.wrap.person.Person;
import com.top_logic.knowledge.wrap.person.PersonManager;

/**
 * Interface for {@link #PROCESS_EXECUTION_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceTemplateGenerator}
 */
public interface ProcessExecution extends ProcessExecutionBase {

	/**
	 * Calculates the duration (in minutes), how long this {@link ProcessExecution} has been
	 * running.
	 */
	default long calculateDurationInMinutes() {
		Date now = new Date();
		Date created = tCreationDate();
		long duration = now.getTime() - created.getTime();
		return duration / 1000 / 60;
	}

	/**
	 * Collects and returns all active tokens which point to a {@link Task}.
	 * 
	 * @return All {@link Token}s which can be relevant for a user.
	 */
	default Set<? extends Token> calculateUserRelevantTokens() {
		Set<Token> res = new HashSet<>();
		Set<? extends Token> activeTokens = getActiveTokens();
		for (Token token : activeTokens) {
			if (token.getUserRelevant()) {
				res.add(token);
			}
		}
		return res;
	}

	/**
	 * The creator of this {@link ProcessExecution}. If the execution is created now, the current
	 * person is returned.
	 */
	default Person calculateCreatedBy() {
		if (KnowledgeItem.State.NEW == tHandle().getState()) {
			return PersonManager.getManager().getCurrentPerson();
		} else {
			return tCreator();
		}
	}

	/**
	 * Determines the {@link PersonContact} for the {@link Person} that created this
	 * {@link ProcessExecution}.
	 * 
	 * @see #calculateCreatedBy()
	 */
	default PersonContact calculateCreatedByContact() {
		return PersonContact.getPersonContact(calculateCreatedBy());
	}

}
