/*
 * SPDX-FileCopyrightText: 2023 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.demo.model.types.wrap;

/**
 * Basic interface for {@link #DEMO_TYPES_B_TYPE} business objects.
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.InterfaceGenerator}
 */
public interface DemoTypesBBase extends com.top_logic.demo.model.types.DemoTypesBC {

	/**
	 * Name of type <code>DemoTypes.B</code>
	 */
	String DEMO_TYPES_B_TYPE = "DemoTypes.B";

	/**
	 * Part <code>enumInBAndC</code> of <code>DemoTypes.B</code>
	 * 
	 * <p>
	 * Declared as <code>tl5.enum:demo.classification.single</code> in configuration.
	 * </p>
	 */
	String ENUM_IN_B_AND_C_ATTR = "enumInBAndC";

	/**
	 * Part <code>genericInBAndC</code> of <code>DemoTypes.B</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:Long</code> in configuration.
	 * </p>
	 */
	String GENERIC_IN_B_AND_C_ATTR = "genericInBAndC";

	/**
	 * Part <code>stringInBAndC</code> of <code>DemoTypes.B</code>
	 * 
	 * <p>
	 * Declared as <code>tl.core:String</code> in configuration.
	 * </p>
	 */
	String STRING_IN_B_AND_C_ATTR = "stringInBAndC";

	/**
	 * Getter for part {@link #ENUM_IN_B_AND_C_ATTR}.
	 */
	default com.top_logic.model.TLClassifier getEnumInBAndC() {
		return (com.top_logic.model.TLClassifier) tValueByName(ENUM_IN_B_AND_C_ATTR);
	}

	/**
	 * Setter for part {@link #ENUM_IN_B_AND_C_ATTR}.
	 */
	default void setEnumInBAndC(com.top_logic.model.TLClassifier newValue) {
		tUpdateByName(ENUM_IN_B_AND_C_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #GENERIC_IN_B_AND_C_ATTR}.
	 */
	default Long getGenericInBAndC() {
		return (Long) tValueByName(GENERIC_IN_B_AND_C_ATTR);
	}

	/**
	 * Setter for part {@link #GENERIC_IN_B_AND_C_ATTR}.
	 */
	default void setGenericInBAndC(Long newValue) {
		tUpdateByName(GENERIC_IN_B_AND_C_ATTR, newValue);
	}

	/**
	 * Getter for part {@link #STRING_IN_B_AND_C_ATTR}.
	 */
	default String getStringInBAndC() {
		return (String) tValueByName(STRING_IN_B_AND_C_ATTR);
	}

	/**
	 * Setter for part {@link #STRING_IN_B_AND_C_ATTR}.
	 */
	default void setStringInBAndC(String newValue) {
		tUpdateByName(STRING_IN_B_AND_C_ATTR, newValue);
	}

}
