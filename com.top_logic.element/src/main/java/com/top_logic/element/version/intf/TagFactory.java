/*
 * SPDX-FileCopyrightText: 2022 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.element.version.intf;

/**
 * Factory for <code>Tag</code> objects.
 * 
 * <p>
 * Note: this is generated code. Do not modify. Instead, create a subclass and register this in the module system.
 * </p>
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.FactoryGenerator}
 */
public class TagFactory extends com.top_logic.element.meta.kbbased.AbstractElementFactory {

	/**
	 * Name of the structure <code>Tag</code> defined by {@link TagFactory}.
	 */
	public static final String TAG_STRUCTURE = "Tag";

	/**
	 * Lookup {@link TagAll} type.
	 */
	public static com.top_logic.model.TLClass getTagAllType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TAG_STRUCTURE).getType(TagAll.TAG_ALL_TYPE);
	}

	/**
	 * Lookup {@link TagAll#DATE_ATTR} of {@link TagAll}.
	 */
	public static com.top_logic.model.TLProperty getDateTagAllAttr() {
		return (com.top_logic.model.TLProperty) getTagAllType().getPart(TagAll.DATE_ATTR);
	}

	/**
	 * Lookup {@link TagAll#NAME_ATTR} of {@link TagAll}.
	 */
	public static com.top_logic.model.TLProperty getNameTagAllAttr() {
		return (com.top_logic.model.TLProperty) getTagAllType().getPart(TagAll.NAME_ATTR);
	}

	/**
	 * Lookup {@link TagAll#TAGGED_OBJ_ATTR} of {@link TagAll}.
	 */
	public static com.top_logic.model.TLReference getTaggedObjTagAllAttr() {
		return (com.top_logic.model.TLReference) getTagAllType().getPart(TagAll.TAGGED_OBJ_ATTR);
	}

	/**
	 * Lookup {@link Tag} type.
	 */
	public static com.top_logic.model.TLClass getTagType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(TAG_STRUCTURE).getType(Tag.TAG_TYPE);
	}

	/**
	 * Name of type <code>Tag.all</code> in structure {@link #TAG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link TagAll#TAG_ALL_TYPE}.
	 */
	@Deprecated
	public static final String TAG_ALL_NODE = TagAll.TAG_ALL_TYPE;

	/**
	 * Name of type <code>Tag</code> in structure {@link #TAG_STRUCTURE}.
	 * 
	 * @deprecated Use {@link Tag#TAG_TYPE}.
	 */
	@Deprecated
	public static final String TAG_NODE = Tag.TAG_TYPE;

	/**
	 * Storage table name of {@link #TAG_NODE} objects.
	 */
	public static final String KO_NAME_TAG = "Tag";


	/**
	 * Create an instance of {@link Tag} type.
	 */
	public final Tag createTag(com.top_logic.model.TLObject context) {
		return (Tag) createObject(getTagType(), context);
	}

	/**
	 * Create an instance of {@link Tag} type.
	 */
	public final Tag createTag() {
		return createTag(null);
	}

	/**
	 * The singleton instance of {@link TagFactory}.
	 */
	public static TagFactory getInstance() {
		return (TagFactory) com.top_logic.element.model.DynamicModelService.getFactoryFor(TAG_STRUCTURE);
	}
}
