<?xml version="1.0" encoding="utf-8" ?>

<action class="com.top_logic.layout.scripting.runtime.action.ActionChainOp"
	xmlns:config="http://www.top-logic.com/ns/config/6.0"
>
	<actions>
		<action class="com.top_logic.layout.scripting.runtime.action.ActionChainOp"
			comment="Setup"
		>
			<actions>
				<action class="com.top_logic.layout.scripting.runtime.action.NamedTabSwitchOp"
					card-comment="Strukturen"
					card-name="demo.structure.tabber"
					component-name="mainTabbar.layout.xml#mainTabber"
					user-id="root"
				/>
				<action class="com.top_logic.layout.scripting.runtime.action.NamedTabSwitchOp"
					card-comment="Typendemo"
					card-name="demo.structure.demoTypes.tabber"
					component-name="com.top_logic.demo/structure/index.layout.xml#structureTab_tabBar"
					user-id="root"
				/>
				<action class="com.top_logic.layout.scripting.runtime.action.NamedTabSwitchOp"
					card-comment="Typendemo"
					card-name="layouts.demo.editStructureWithExport.demoStructureDemoTypes.tab"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#demoStructureTab"
					user-id="root"
				/>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp"
					change-kind="ABSOLUTE"
					user-id="root"
				>
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath"
							label-path=""
						/>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.tree.TreeDataName">
						<tree-data-owner config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
							tab-path="Strukturen > Typendemo"
						/>
					</selection-model-name>
				</action>
				<action class="com.top_logic.layout.scripting.template.action.op.ScriptTemplateActionOp"
					template="script:/demo/create-A.xml"
					template-name-comment="Create A"
				>
					<parameters>
						<parameter name="Name">
							<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringValue"
								string="FirstAlpha"
							/>
						</parameter>
					</parameters>
				</action>
				<action class="com.top_logic.layout.scripting.template.action.op.ScriptTemplateActionOp"
					template="script:/demo/create-A.xml"
					template-name-comment="Create A"
				>
					<parameters>
						<parameter name="Name">
							<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringValue"
								string="SecondAlpha"
							/>
						</parameter>
					</parameters>
				</action>
				<action class="com.top_logic.layout.scripting.template.action.op.ScriptTemplateActionOp"
					template="script:/demo/create-A.xml"
					template-name-comment="Create A"
				>
					<parameters>
						<parameter name="Name">
							<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringValue"
								string="ThirdAlpha"
							/>
						</parameter>
					</parameters>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp">
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
							structure-name="DemoTypes"
						>
							<structure-path>
								<node name="FirstAlpha"/>
							</structure-path>
						</selectee>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
						component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-name="ElementSwitchEditCommand"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.action.FormRawInput$Op"
					user-id="root"
				>
					<field config:interface="com.top_logic.layout.form.FuzzyFormMemberNaming$Name"
						label="date"
					>
						<component config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							tab-path="Strukturen > Typendemo > Typendemo"
						/>
					</field>
					<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringNaming$Name"
						value="01.01.2001"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.action.FormInput$Op"
					user-id="root"
				>
					<field config:interface="com.top_logic.layout.form.FuzzyFormMemberNaming$Name"
						label="string"
					>
						<component config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							tab-path="Strukturen > Typendemo > Typendemo"
						/>
					</field>
					<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringNaming$Name"
						value="zoom zoom"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.layout.form.component.DefaultSaveCommandHandler"
					command-label="Speichern"
					command-name="defaultSave"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp"
					change-kind="ABSOLUTE"
					user-id="root"
				>
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath"
							label-path="ThirdAlpha"
						/>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.tree.TreeDataName">
						<tree-data-owner config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
							tab-path="Strukturen > Typendemo"
						/>
					</selection-model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent$StructuredElementSwitchEditCommandHandler"
					command-label="Bearbeiten"
					command-name="ElementSwitchEditCommand"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.action.FormRawInput$Op"
					user-id="root"
				>
					<field config:interface="com.top_logic.layout.form.FuzzyFormMemberNaming$Name"
						label="date"
					>
						<component config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							tab-path="Strukturen > Typendemo > Typendemo"
						/>
					</field>
					<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringNaming$Name"
						value="03.03.2033"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.layout.form.component.DefaultSaveCommandHandler"
					command-label="Speichern"
					command-name="defaultSave"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
			</actions>
		</action>
		<action class="com.top_logic.layout.scripting.runtime.action.ActionChainOp">
			<actions>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp"
					change-kind="ABSOLUTE"
					user-id="root"
				>
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath"
							label-path="FirstAlpha"
						/>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.tree.TreeDataName">
						<tree-data-owner config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
							tab-path="Strukturen > Typendemo"
						/>
					</selection-model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent$StructuredElementSwitchEditCommandHandler"
					command-label="Bearbeiten"
					command-name="ElementSwitchEditCommand"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
									field-name="elementOrder"
								/>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.ListValue">
						<list>
							<entry config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
								structure-name="DemoTypes"
							>
								<structure-path>
									<node name="SecondAlpha"/>
								</structure-path>
							</entry>
						</list>
					</expected-value>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="Position vor"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-name="elementOrder"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-name="elementOrder"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-name="elementOrder"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
									<attribute-ref attribute-name="date">
										<type type-name="DemoTypes.A"/>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.DateValue"
						date="2000-12-31T15:00:00.000Z"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="date"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
									<attribute-ref attribute-name="checklistSingle">
										<type type-name="DemoTypes.A"/>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.ListValue">
						<list/>
					</expected-value>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="checklistSingle"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="checklistSingle">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="checklistSingle">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="checklistSingle">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
									<attribute-ref attribute-name="string">
										<type type-name="DemoTypes.A"/>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringValue"
						string="zoom zoom"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="string"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="string">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="string">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="string">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.layout.form.component.EditComponent$CancelCommand"
					command-label="Abbrechen"
					command-name="nothing"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
			</actions>
		</action>
		<action class="com.top_logic.layout.scripting.runtime.action.ActionChainOp">
			<actions>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp"
					user-id="root"
				>
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
							structure-name="DemoTypes"
						>
							<structure-path/>
						</selectee>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
						component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
									field-name="elementType"
								/>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringValue"
						string="Demo Root"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-name="elementType"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="IMMUTABLE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-name="elementType"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="Typ"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-name="elementType"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp">
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
							structure-name="DemoTypes"
						>
							<structure-path>
								<node name="ThirdAlpha"/>
							</structure-path>
						</selectee>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
						component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
									<attribute-ref attribute-name="date">
										<type type-name="DemoTypes.A"/>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="ThirdAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.DateValue"
						date="2033-03-02T15:00:00.000Z"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="ThirdAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="IMMUTABLE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="ThirdAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="date"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef">
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A"/>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="ThirdAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
			</actions>
		</action>
		<action class="com.top_logic.layout.scripting.runtime.action.ActionChainOp">
			<actions>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp">
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
							structure-name="DemoTypes"
						>
							<structure-path>
								<node name="FirstAlpha"/>
							</structure-path>
						</selectee>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
						component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
									field-label-comment="Typ"
									field-name="elementType"
								/>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringValue"
						string="Demo A"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-label-comment="Typ"
								field-name="elementType"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="IMMUTABLE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-label-comment="Typ"
								field-name="elementType"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="Typ"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-label-comment="Typ"
								field-name="elementType"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
									field-label-comment="Position vor"
									field-name="elementOrder"
								/>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.ListValue">
						<list>
							<entry config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
								structure-name="DemoTypes"
							>
								<structure-path>
									<node name="SecondAlpha"/>
								</structure-path>
							</entry>
						</list>
					</expected-value>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-label-comment="Position vor"
								field-name="elementOrder"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="IMMUTABLE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-label-comment="Position vor"
								field-name="elementOrder"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="Position vor"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.NamedFieldRef"
								field-label-comment="Position vor"
								field-name="elementOrder"
							/>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="string"
								>
									<attribute-ref attribute-name="string">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.StringValue"
						string="zoom zoom"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="string"
							>
								<attribute-ref attribute-name="string">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="IMMUTABLE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="string"
							>
								<attribute-ref attribute-name="string">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="string"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="string"
							>
								<attribute-ref attribute-name="string">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="mandatory boolean"
								>
									<attribute-ref attribute-name="booleanMandatory">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.BooleanValue"
						boolean="true"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="IMMUTABLE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="booleanMandatory"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
			</actions>
		</action>
		<action class="com.top_logic.layout.scripting.runtime.action.ActionChainOp">
			<actions>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent$StructuredElementSwitchEditCommandHandler"
					command-label="Bearbeiten"
					command-name="ElementSwitchEditCommand"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.FormInputOp">
					<model-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
						component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
						component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					/>
					<field-values>
						<value>
							<field-path>
								<field config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="mandatory boolean"
								>
									<attribute-ref attribute-name="booleanMandatory">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</field>
							</field-path>
							<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.BooleanValue"
								boolean="false"
							/>
						</value>
					</field-values>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="mandatory boolean"
								>
									<attribute-ref attribute-name="booleanMandatory">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.BooleanValue"
						boolean="false"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="booleanMandatory"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="date"
								>
									<attribute-ref attribute-name="date">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.DateValue"
						date="2000-12-31T15:00:00.000Z"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="date"
							>
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="date"
							>
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="date"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="date"
							>
								<attribute-ref attribute-name="date">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="boolean"
								>
									<attribute-ref attribute-name="boolean">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.BooleanValue"
						boolean="false"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldValidityAssertionOp"
					validity="VALID"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="boolean"
							>
								<attribute-ref attribute-name="boolean">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="boolean"
							>
								<attribute-ref attribute-name="boolean">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="boolean"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="boolean"
							>
								<attribute-ref attribute-name="boolean">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.FormInputOp">
					<model-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
						component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
						component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					/>
					<field-values>
						<value>
							<field-path>
								<field config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="mandatory boolean"
								>
									<attribute-ref attribute-name="booleanMandatory">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</field>
							</field-path>
							<value config:interface="com.top_logic.layout.scripting.recorder.ref.value.BooleanValue"
								boolean="false"
							/>
						</value>
					</field-values>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.ValueAssertionOp">
					<actual-value config:interface="com.top_logic.layout.scripting.action.CurrentFieldValue">
						<field-name config:interface="com.top_logic.layout.form.FormMemberName">
							<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
								component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
								component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
							/>
							<path>
								<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
									field-label-comment="mandatory boolean"
								>
									<attribute-ref attribute-name="booleanMandatory">
										<type type-name="DemoTypes.A">
											<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
										</type>
									</attribute-ref>
									<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
										structure-name="DemoTypes"
									>
										<structure-path>
											<node name="FirstAlpha"/>
										</structure-path>
									</self-ref>
								</node>
							</path>
						</field-name>
					</actual-value>
					<expected-value config:interface="com.top_logic.layout.scripting.recorder.ref.value.BooleanValue"
						boolean="false"
					/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldModeAssertionOp"
					mode="ACTIVE"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.assertion.FieldLabelAssertionOp"
					label="booleanMandatory"
				>
					<model-name config:interface="com.top_logic.layout.form.FormMemberName">
						<form-handler-name config:interface="com.top_logic.layout.component.ComponentBasedNamingScheme$ComponentName"
							component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
							component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
						/>
						<path>
							<node config:interface="com.top_logic.layout.scripting.recorder.ref.field.AttributeFieldRef"
								field-label-comment="mandatory boolean"
							>
								<attribute-ref attribute-name="booleanMandatory">
									<type type-name="DemoTypes.A">
										<scope-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.NullValue"/>
									</type>
								</attribute-ref>
								<self-ref config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.NodeRef"
									structure-name="DemoTypes"
								>
									<structure-path>
										<node name="FirstAlpha"/>
									</structure-path>
								</self-ref>
							</node>
						</path>
					</model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.layout.form.component.EditComponent$CancelCommand"
					command-label="Abbrechen"
					command-name="nothing"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
				>
					<arguments/>
				</action>
			</actions>
		</action>
		<action class="com.top_logic.layout.scripting.runtime.action.ActionChainOp"
			comment="Clean up"
		>
			<actions>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp"
					change-kind="ABSOLUTE"
					user-id="root"
				>
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath"
							label-path="FirstAlpha"
						/>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.tree.TreeDataName">
						<tree-data-owner config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
							tab-path="Strukturen > Typendemo"
						/>
					</selection-model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.element.layout.structured.StructuredElementRemoveHandler"
					command-label="Löschen..."
					command-name="elementRemove"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp"
					change-kind="ABSOLUTE"
					user-id="root"
				>
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath"
							label-path="SecondAlpha"
						/>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.tree.TreeDataName">
						<tree-data-owner config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
							tab-path="Strukturen > Typendemo"
						/>
					</selection-model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.element.layout.structured.StructuredElementRemoveHandler"
					command-label="Löschen..."
					command-name="elementRemove"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.SelectActionOp"
					change-kind="ABSOLUTE"
					user-id="root"
				>
					<selection>
						<selectee config:interface="com.top_logic.layout.scripting.recorder.ref.value.object.CompactLabelPath"
							label-path="ThirdAlpha"
						/>
						<selection-state boolean="true"/>
					</selection>
					<selection-model-name config:interface="com.top_logic.layout.tree.TreeDataName">
						<tree-data-owner config:interface="com.top_logic.layout.scripting.recorder.ref.ui.FuzzyComponentNaming$Name"
							name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesTree"
							tab-path="Strukturen > Typendemo"
						/>
					</selection-model-name>
				</action>
				<action class="com.top_logic.layout.scripting.runtime.action.CommandActionOp"
					command-implementation-comment="com.top_logic.element.layout.structured.StructuredElementRemoveHandler"
					command-label="Löschen..."
					command-name="elementRemove"
					component-implementation-comment="com.top_logic.element.layout.structured.AdminElementComponent"
					component-name="com.top_logic.demo/structure/demoTypes/demoTypesView.layout.xml#DemoTypesEdit"
					user-id="root"
				>
					<arguments/>
				</action>
				<action class="com.top_logic.layout.scripting.template.action.op.ScriptTemplateActionOp"
					template="script:/Variable/Action-Variable-Alle loeschen.xml"
					template-name-comment="Variable Alle löschen"
				/>
			</actions>
		</action>
	</actions>
</action>