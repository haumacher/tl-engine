com.top_logic.graph.layouter.LayoutDirection = Layout-Richtung
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SINK = Horizontal vom Waschbecken aus
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SINK.tooltip = Horizontale Layout-Richtung von den Senken zu den Quellen.
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SOURCE = Horizontal von der Quelle
com.top_logic.graph.layouter.LayoutDirection.HORIZONTAL_FROM_SOURCE.tooltip = Horizontale Anordnungsrichtung von Quellen zu Senken.
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SINK = Vertikal vom Waschbecken
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SINK.tooltip = Vertikale Layout-Richtung von den Senken zu den Quellen.
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SOURCE = Vertikal von der Quelle
com.top_logic.graph.layouter.LayoutDirection.VERTICAL_FROM_SOURCE.tooltip = Vertikale Layout-Richtung von Quellen zu Senken.
com.top_logic.graph.layouter.LayoutDirection.tooltip = Richtung des Layouts.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover$OrthogonalLineDirection = Orthogonale Linienrichtung
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover$OrthogonalLineDirection.tooltip = Zweidimensionale Linienrichtungen.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.BOTTOM = Unten
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.BOTTOM.tooltip = Gerade Linie von oben nach unten.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.LEFT = Links
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.LEFT.tooltip = Gerade Linie von rechts nach links.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.NOT_ORTHOGONAL = Nicht orthogonal
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.NOT_ORTHOGONAL.tooltip = Keine orthogonale gerade Linie.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.RIGHT = Rechts
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.RIGHT.tooltip = Gerade Linie von links nach rechts.
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.TOP = Nach oben
com.top_logic.graph.layouter.algorithm.edge.waypoint.OrthogonalRedundantWaypointsRemover.OrthogonalLineDirection.TOP.tooltip = Gerade Linie von unten nach oben.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus = Status der Kreuzung
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.FULL = Vollständig
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.FULL.tooltip = Ein Artikel ist streng in dem anderen Artikel enthalten.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.NONE = Keine
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.NONE.tooltip = Keine Kreuzung.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.PARTIAL = Teilweise
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.PARTIAL.tooltip = Ein Artikel ist teilweise in dem anderen Artikel enthalten.
com.top_logic.graph.layouter.algorithm.rendering.lines.IntersectionStatus.tooltip = Schnittmengenstatus für zwei Artikel.
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D$Orientation = Orientierung
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D$Orientation.tooltip = Ausrichtung dieser Linie.
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.LEFT = Links
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.LEFT.tooltip = Von rechts nach links. Der Anfang ist größer als das Ende.
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.RIGHT = Rechts
com.top_logic.graph.layouter.algorithm.rendering.lines.Line1D.Orientation.RIGHT.tooltip = Von links nach rechts. Das Ende ist größer als der Anfang.
com.top_logic.graph.layouter.model.LayoutGraph$NodeType = Knotentyp
com.top_logic.graph.layouter.model.LayoutGraph$NodeType.tooltip = Typ für einen <i>Layout-Knoten</i> für eine geschichtete Layout-Graphenstruktur. Zusätzliche Typen von Knoten, Dummy-Knoten, werden für die folgenden Anwendungsfälle benötigt: Kanten, die sich über genau drei Schichten erstrecken, werden in zwei Kanten aufgeteilt. Für eine solche Kante (v,w) benötigen wir einen zusätzlichen Dummy-Knoten (nämlich r). (v,w) wird nun in (v,r) und (r,w) getrennt. Kanten, die sich über mehr als drei Schichten erstrecken, werden durch Segmente beschrieben. Für eine solche Kante (v,w) benötigen wir zwei zusätzliche Dummy-Knoten (nämlich p und q). (v,w) wird nun in (v,p), (p,q) und (q,w) unterteilt. Die Kante (p,q) wird das "innere" Segment genannt.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.GRAPH_NODE = Graph-Knoten
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.GRAPH_NODE.tooltip = <i>Standard-Layout-Knoten</i>.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.P_DUMMY_NODE = P-Dummy-Knoten
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.P_DUMMY_NODE.tooltip = <i>Dummy-Layout-Knoten</i>, der Quelle eines Segments ist.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.Q_DUMMY_NODE = Q-Dummy-Knoten
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.Q_DUMMY_NODE.tooltip = <i>Dummy-Layout-Knoten</i>, der das Ziel eines Segments ist.
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.R_DUMMY_NODE = R-Dummy-Knoten
com.top_logic.graph.layouter.model.LayoutGraph.NodeType.R_DUMMY_NODE.tooltip = <i>Dummy-Layout-Knoten</i> für Kanten, die sich über genau drei Schichten erstrecken, wo kein Segment benötigt wird.
