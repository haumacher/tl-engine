model.tl.model = Model
model.tl.model.DBType = Database type
model.tl.model.DerivedTLTypePart = Derived part
model.tl.model.DerivedTLTypePart.derived = Derived
model.tl.model.HistoryType = Historization
model.tl.model.TLAnnotation = Annotation
model.tl.model.TLAssociation = Association
model.tl.model.TLAssociation.ends = Association ends
model.tl.model.TLAssociation.subsets = Subsets
model.tl.model.TLAssociation.union = Supersets
model.tl.model.TLAssociationEnd = Association end
model.tl.model.TLAssociationEnd.aggregate = Aggregate
model.tl.model.TLAssociationEnd.aggregate.tooltip = Flag for an association end that points in the direction of the aggration (the whole) of a composition relationship (part/whole).
model.tl.model.TLAssociationEnd.composite = Composite
model.tl.model.TLAssociationEnd.composite.tooltip = Flag for an association end that points in the direction of the parts of a whole of a composition relationship (part/whole).
model.tl.model.TLAssociationEnd.endIndex = Index of association end
model.tl.model.TLAssociationEnd.historyType = Historization
model.tl.model.TLAssociationEnd.navigate = Can navigate
model.tl.model.TLAssociationEnd.reference = Reference
model.tl.model.TLClass = Business object type
model.tl.model.TLClass.abstract = Abstract
model.tl.model.TLClass.final = Final
model.tl.model.TLClass.generalizations = Generalizations
model.tl.model.TLClass.scope = Scope
model.tl.model.TLClass.specializations = Specializations
model.tl.model.TLClassifier = Classifier
model.tl.model.TLClassifier.default = Default
model.tl.model.TLClassifier.index = Index
model.tl.model.TLEnumeration = Enumeration
model.tl.model.TLEnumeration.classifiers = Classifiers
model.tl.model.TLModel = TL-Model
model.tl.model.TLModel.modules = Modules
model.tl.model.TLModelPart = Model part
model.tl.model.TLModelPart.annotations = Annotations
model.tl.model.TLModelPart.model = Model
model.tl.model.TLModule = Module
model.tl.model.TLModule.singletons = Root objects
model.tl.model.TLModuleSingletons = Root objects
model.tl.model.TLModuleSingletons.module = Module
model.tl.model.TLModuleSingletons.name = Name
model.tl.model.TLModuleSingletons.singleton = Singleton
model.tl.model.TLNamedPart = Named part
model.tl.model.TLNamedPart.name = Name
model.tl.model.TLObject = Business object
model.tl.model.TLObject.tType = Type
model.tl.model.TLPrimitive = Data type
model.tl.model.TLPrimitive.binary = Binary
model.tl.model.TLPrimitive.dbPrecision = Database precision
model.tl.model.TLPrimitive.dbSize = Database size
model.tl.model.TLPrimitive.dbType = Database type
model.tl.model.TLProperty = Property
model.tl.model.TLReference = Reference
model.tl.model.TLReference.aggregate = Aggregate
model.tl.model.TLReference.backwards = Backwards
model.tl.model.TLReference.composite = Composition
model.tl.model.TLReference.end = Association end
model.tl.model.TLReference.historyType = Historization
model.tl.model.TLReference.opposite = Opposite
model.tl.model.TLReference.oppositeEnd = Assocation end of opposite
model.tl.model.TLScope = Scope
model.tl.model.TLScope.types = Types
model.tl.model.TLStructuredType = Structured type
model.tl.model.TLStructuredType.localParts = Local parts
model.tl.model.TLStructuredTypePart = Structured type part
model.tl.model.TLStructuredTypePart.abstract = Abstract
model.tl.model.TLStructuredTypePart.abstract.tooltip = Abstract properties can only be defined in abstract classes and must be overwritten in concrete classes. Abstract properties do not have a storage implementation.
model.tl.model.TLStructuredTypePart.bag = Bag
model.tl.model.TLStructuredTypePart.bag.tooltip = May a value occurs multiple times?
model.tl.model.TLStructuredTypePart.classifiedBy = Classified by
model.tl.model.TLStructuredTypePart.definition = Definition
model.tl.model.TLStructuredTypePart.mandatory = Mandatory
model.tl.model.TLStructuredTypePart.multiple = Multiple
model.tl.model.TLStructuredTypePart.ordered = Ordered
model.tl.model.TLStructuredTypePart.override = Override
model.tl.model.TLType = Type
model.tl.model.TLType.module = Module
model.tl.model.TLType.scope = Scope
model.tl.model.TLTypePart = Type part
model.tl.model.TLTypePart.owner = Definition type
model.tl.model.TLTypePart.type = Target type
