/*
 * Some Data used by TestMemoryBinaryData.java must be < MemoryBinaryData.MAX_DATA_SIZE in size
 */
package test.com.top_logic.knowledge.service.binary;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Random;

import junit.framework.Test;
import junit.framework.TestSuite;
import junit.textui.TestRunner;

import com.top_logic.basic.Logger;
import com.top_logic.basic.io.FileUtilities;
import com.top_logic.basic.io.StreamUtilities;
import com.top_logic.knowledge.service.binary.BinaryData;
import com.top_logic.knowledge.service.binary.FileBasedBinaryData;
import com.top_logic.knowledge.service.binary.MemoryBinaryData;

import test.com.top_logic.TLTestSetup;
import test.com.top_logic.basic.BasicTestCase;

/**
 * Test the {@link MemoryBinaryData}.
 * 
 * @history   30.09.2009    kha    created
 * @author    <a href="mailto:kha@top-logic.com">kha</a>
 */
public class TestMemoryBinaryData extends BasicTestCase {

    public TestMemoryBinaryData(String name) {
        super(name);
    }
    
    /**
     * Test the main aspects of the {@link FileBasedBinaryData}.
     */
    public void testMain() throws  IOException {
        File implFile = new File("src/com/top_logic/knowledge/service/binary/MemoryBinaryData.java");
        Random rand = new Random(implFile.length());
        
        byte[] data = new byte[MemoryBinaryData.MAX_DATA_SIZE];
        rand.nextBytes(data);
        MemoryBinaryData mbd1 = new MemoryBinaryData(data);
        data = new byte[MemoryBinaryData.MAX_DATA_SIZE];
        rand.nextBytes(data);
        MemoryBinaryData mbd2 = new MemoryBinaryData(data);
        File thisFile = new File("src/test/com/top_logic/knowledge/service/binary/TestMemoryBinaryData.java");
        MemoryBinaryData mbd3 = new MemoryBinaryData(new FileInputStream(thisFile), thisFile.length());
        
        BinaryData       otherBD = new FileBasedBinaryData(thisFile);

        long thisLen = thisFile.length();
        assertEquals(thisLen     , mbd3.getSize());
        assertEquals((int)thisLen, mbd3.hashCode()); // Admitted this is an implementation detail ...
        assertEquals(mbd3, otherBD);
        assertEquals(mbd3, mbd3);
        assertFalse(mbd3.equals(mbd1));
        assertFalse(mbd2.equals(mbd3));
        
        assertTrue(mbd3.toString().indexOf("mbd3.toString().indexOf") > 0);
        
        assertTrue(StreamUtilities.equalsStream(mbd2.getStream(), new ByteArrayInputStream(data)));
    }
    
    /**
     * Provoke exceptions when using FileBasedBinaryData.
     */
    public void testException() throws  IOException {
        byte[] data = new byte[0];
        try {
            new MemoryBinaryData(data);
        } catch (IllegalArgumentException expected) { /* expected */ }

        data = new byte[MemoryBinaryData.MAX_DATA_SIZE + 1];
        try {
             new MemoryBinaryData(data);
        } catch (IllegalArgumentException expected) { /* expected */ }
        
        File thisFile = new File("src/test/com/top_logic/knowledge/service/binary/TestMemoryBinaryData.java");
        assert thisFile.length() < MemoryBinaryData.MAX_DATA_SIZE;

        try {
            new MemoryBinaryData(new FileInputStream(thisFile), thisFile.length() + 1);
        } catch (IOException expected) { /* expected */ }

        try {
            new MemoryBinaryData(new FileInputStream(thisFile), thisFile.length() >> 1);
        } catch (IOException expected) { /* expected */ }
        
    }
    
    public static Test suite() {
        return new TLTestSetup(new TestSuite(TestMemoryBinaryData.class));
    }
    
    public static void main(String[] args) {
        Logger.configureStdout(); // "INFO"
        TestRunner.run(suite());
    }


}

