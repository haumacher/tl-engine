/*
 * SPDX-FileCopyrightText: 2024 (c) Business Operation Systems GmbH <info@top-logic.com>
 * 
 * SPDX-License-Identifier: AGPL-3.0-only OR LicenseRef-BOS-TopLogic-1.0
 */
package com.top_logic.demo.model.plain;

/**
 * Factory for <code>DemoPlain</code> objects.
 * 
 * <p>
 * Note: this is generated code. Do not modify. Instead, create a subclass and register this in the module system.
 * </p>
 * 
 * @author Automatically generated by {@link com.top_logic.element.model.generate.FactoryGenerator}
 */
public class DemoPlainFactory extends com.top_logic.element.meta.kbbased.AbstractElementFactory {

	/**
	 * Name of the structure <code>DemoPlain</code> defined by {@link DemoPlainFactory}.
	 */
	public static final String DEMO_PLAIN_STRUCTURE = "DemoPlain";

	/**
	 * Lookup {@link DemoPlainAll} type.
	 */
	public static com.top_logic.model.TLClass getDemoPlainAllType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(DemoPlainAll.DEMO_PLAIN_ALL_TYPE);
	}

	/**
	 * Lookup {@link DemoPlainAll#NAME_ATTR} of {@link DemoPlainAll}.
	 */
	public static com.top_logic.model.TLProperty getNameDemoPlainAllAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAllType().getPart(DemoPlainAll.NAME_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA} type.
	 */
	public static com.top_logic.model.TLClass getDemoPlainAType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(DemoPlainA.DEMO_PLAIN_A_TYPE);
	}

	/**
	 * Lookup {@link DemoPlainA#BOOLEAN_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getBooleanDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.BOOLEAN_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#BOOLEAN_MANDATORY_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getBooleanMandatoryDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.BOOLEAN_MANDATORY_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#BOOLEAN_RADIO_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getBooleanRadioDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.BOOLEAN_RADIO_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#BOOLEAN_RADIO_MANDATORY_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getBooleanRadioMandatoryDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.BOOLEAN_RADIO_MANDATORY_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#BOOLEAN_SELECT_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getBooleanSelectDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.BOOLEAN_SELECT_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#BOOLEAN_SELECT_MANDATORY_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getBooleanSelectMandatoryDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.BOOLEAN_SELECT_MANDATORY_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#CHECKLIST_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getChecklistDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.CHECKLIST_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#CHECKLIST_MULTI_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getChecklistMultiDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.CHECKLIST_MULTI_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#CHECKLIST_SINGLE_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getChecklistSingleDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.CHECKLIST_SINGLE_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#COLLECTION_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getCollectionDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.COLLECTION_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#CREATED_BY_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getCreatedByDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.CREATED_BY_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#CREATED_DATE_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getCreatedDateDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.CREATED_DATE_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#DATE_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getDateDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.DATE_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#DATE_TIME_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getDateTimeDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.DATE_TIME_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#DOCUMENT_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getDocumentDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.DOCUMENT_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#FLOAT_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getFloatDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.FLOAT_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#FLOAT_CONSTRAINT_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getFloatConstraintDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.FLOAT_CONSTRAINT_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#LIST_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getListDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.LIST_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#LONG_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getLongDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.LONG_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#LONG_CONSTRAINT_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getLongConstraintDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.LONG_CONSTRAINT_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#MODIFIED_BY_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getModifiedByDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.MODIFIED_BY_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#MODIFIED_DATE_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getModifiedDateDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.MODIFIED_DATE_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#STRING_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getStringDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.STRING_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#STRING_SET_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLProperty getStringSetDemoPlainAAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainAType().getPart(DemoPlainA.STRING_SET_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#TYPED_SET_ORDERED_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getTypedSetOrderedDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.TYPED_SET_ORDERED_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#TYPED_SET_UNORDERED_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getTypedSetUnorderedDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.TYPED_SET_UNORDERED_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#TYPED_WRAPPER_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getTypedWrapperDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.TYPED_WRAPPER_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#TYPED_WRAPPER_FILTERED_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getTypedWrapperFilteredDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.TYPED_WRAPPER_FILTERED_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#UNTYPED_WRAPPER_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getUntypedWrapperDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.UNTYPED_WRAPPER_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainA#WEB_FOLDER_ATTR} of {@link DemoPlainA}.
	 */
	public static com.top_logic.model.TLReference getWebFolderDemoPlainAAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainAType().getPart(DemoPlainA.WEB_FOLDER_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainBC} type.
	 */
	public static com.top_logic.model.TLClass getDemoPlainBCType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(DemoPlainBC.DEMO_PLAIN_BC_TYPE);
	}

	/**
	 * Lookup {@link DemoPlainBC#DATE_WITH_DEFAULT_ATTR} of {@link DemoPlainBC}.
	 */
	public static com.top_logic.model.TLProperty getDateWithDefaultDemoPlainBCAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainBCType().getPart(DemoPlainBC.DATE_WITH_DEFAULT_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainBC#TYPED_WRAPPER_REVERSE_ATTR} of {@link DemoPlainBC}.
	 */
	public static com.top_logic.model.TLReference getTypedWrapperReverseDemoPlainBCAttr() {
		return (com.top_logic.model.TLReference) getDemoPlainBCType().getPart(DemoPlainBC.TYPED_WRAPPER_REVERSE_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainB} type.
	 */
	public static com.top_logic.model.TLClass getDemoPlainBType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(DemoPlainB.DEMO_PLAIN_B_TYPE);
	}

	/**
	 * Lookup {@link DemoPlainB#STRING_IN_B_AND_C_ATTR} of {@link DemoPlainB}.
	 */
	public static com.top_logic.model.TLProperty getStringInBAndCDemoPlainBAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainBType().getPart(DemoPlainB.STRING_IN_B_AND_C_ATTR);
	}

	/**
	 * Lookup {@link DemoPlainC} type.
	 */
	public static com.top_logic.model.TLClass getDemoPlainCType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(DemoPlainC.DEMO_PLAIN_C_TYPE);
	}

	/**
	 * Lookup {@link DemoPlainC#STRING_IN_B_AND_C_ATTR} of {@link DemoPlainC}.
	 */
	public static com.top_logic.model.TLProperty getStringInBAndCDemoPlainCAttr() {
		return (com.top_logic.model.TLProperty) getDemoPlainCType().getPart(DemoPlainC.STRING_IN_B_AND_C_ATTR);
	}

	/**
	 * Lookup {@link A} type.
	 */
	public static com.top_logic.model.TLClass getAType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(A.A_TYPE);
	}

	/**
	 * Lookup {@link B} type.
	 */
	public static com.top_logic.model.TLClass getBType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(B.B_TYPE);
	}

	/**
	 * Lookup {@link C} type.
	 */
	public static com.top_logic.model.TLClass getCType() {
		return (com.top_logic.model.TLClass) com.top_logic.util.model.ModelService.getApplicationModel().getModule(DEMO_PLAIN_STRUCTURE).getType(C.C_TYPE);
	}

	/**
	 * Name of type <code>DemoPlain.All</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link DemoPlainAll#DEMO_PLAIN_ALL_TYPE}.
	 */
	@Deprecated
	public static final String DEMO_PLAIN_ALL_NODE = DemoPlainAll.DEMO_PLAIN_ALL_TYPE;

	/**
	 * Name of type <code>DemoPlain.A</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link DemoPlainA#DEMO_PLAIN_A_TYPE}.
	 */
	@Deprecated
	public static final String DEMO_PLAIN_A_NODE = DemoPlainA.DEMO_PLAIN_A_TYPE;

	/**
	 * Name of type <code>DemoPlain.BC</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link DemoPlainBC#DEMO_PLAIN_BC_TYPE}.
	 */
	@Deprecated
	public static final String DEMO_PLAIN_BC_NODE = DemoPlainBC.DEMO_PLAIN_BC_TYPE;

	/**
	 * Name of type <code>DemoPlain.B</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link DemoPlainB#DEMO_PLAIN_B_TYPE}.
	 */
	@Deprecated
	public static final String DEMO_PLAIN_B_NODE = DemoPlainB.DEMO_PLAIN_B_TYPE;

	/**
	 * Name of type <code>DemoPlain.C</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link DemoPlainC#DEMO_PLAIN_C_TYPE}.
	 */
	@Deprecated
	public static final String DEMO_PLAIN_C_NODE = DemoPlainC.DEMO_PLAIN_C_TYPE;

	/**
	 * Name of type <code>A</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link A#A_TYPE}.
	 */
	@Deprecated
	public static final String A_NODE = A.A_TYPE;

	/**
	 * Storage table name of {@link #A_NODE} objects.
	 */
	public static final String KO_NAME_A = "GenericObject";

	/**
	 * Name of type <code>B</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link B#B_TYPE}.
	 */
	@Deprecated
	public static final String B_NODE = B.B_TYPE;

	/**
	 * Storage table name of {@link #B_NODE} objects.
	 */
	public static final String KO_NAME_B = "GenericObject";

	/**
	 * Name of type <code>C</code> in structure {@link #DEMO_PLAIN_STRUCTURE}.
	 * 
	 * @deprecated Use {@link C#C_TYPE}.
	 */
	@Deprecated
	public static final String C_NODE = C.C_TYPE;

	/**
	 * Storage table name of {@link #C_NODE} objects.
	 */
	public static final String KO_NAME_C = "GenericObject";


	/**
	 * Create an instance of {@link A} type.
	 */
	public final A createA(com.top_logic.model.TLObject context) {
		return (A) createObject(getAType(), context);
	}

	/**
	 * Create an instance of {@link A} type.
	 */
	public final A createA() {
		return createA(null);
	}

	/**
	 * Create an instance of {@link B} type.
	 */
	public final B createB(com.top_logic.model.TLObject context) {
		return (B) createObject(getBType(), context);
	}

	/**
	 * Create an instance of {@link B} type.
	 */
	public final B createB() {
		return createB(null);
	}

	/**
	 * Create an instance of {@link C} type.
	 */
	public final C createC(com.top_logic.model.TLObject context) {
		return (C) createObject(getCType(), context);
	}

	/**
	 * Create an instance of {@link C} type.
	 */
	public final C createC() {
		return createC(null);
	}

	/**
	 * The singleton instance of {@link DemoPlainFactory}.
	 */
	public static DemoPlainFactory getInstance() {
		return (DemoPlainFactory) com.top_logic.element.model.DynamicModelService.getFactoryFor(DEMO_PLAIN_STRUCTURE);
	}
}
